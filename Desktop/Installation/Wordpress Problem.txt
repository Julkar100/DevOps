Local Server form 



    1  clear
    2  ip a
    3  clear
    4  sudo apt-get update
    5  sudo apt-get upgrade
    6  sudo apt install nginx -y
    7  sudo systemctl status nginx
    8  sudo apt install mysql-server mysql-client -y
    9  sudo systemctl status mysql
   10  sudo systemctl enable mysql
   11  sudo systemctl enable nginx
   12  sudo mysql_secure_installation
   13  sudo mysql -u root -p
   14  sudo /etc/init.d/mysql stop
   15  sudo mkdir /var/run/mysqld
   16  sudo chown mysql /var/run/mysqld
   17  sudo mysqld_safe --skip-grant-tables&
   18  sudo mysql --user=root mysql
   19  sudo killall -KILL mysql mysqld_safe mysqld
   20  sudo /etc/init.d/mysql start
   21  mysql -u root -p
   22  sudo apt install php7.4 php7.4-gd php7.4-mysql php7.4-zip php7.4-fpm -y
   23  sudo apt update && sudo apt upgrade -y
   24  sudo apt install software-properties-common -y
   25  sudo add-apt-repository ppa:ondrej/php -y
   26  sudo apt update
   27  sudo apt install php7.4 php7.4-gd php7.4-mysql php7.4-zip php7.4-fpm -y
   28  php -v
   29  sudo systemctl status php7.4-fpm
   30  wget https://wordpress.org/latest.zip
   31  sudo apt install unzip -y
   32  unzip latest.zip
   33  cd wordpress/
   34  ls
   35  ls -la
   36  sudo cp -r * /var/www/html/
   37  sudo chown -R www-data:www-data /var/www/html
   38  sudo systemctl restart nginx
   39  cd /etc/nginx/sites-enabled/
   40  ls
   41  sudo mv default wordpress
   42  ls
   43  sudo nano wordpress
   44  sudo nginx -t
   45  sudo systemctl restart nginx
   46  cd ..
   47  cd..
   48  cd ..
   49  reboot
   50  sudo systemctl restart nginx
   51  sudo systemctl restart
   52  clear
   53  history
   54  cd ..
   55  cd /var/www/html/
   56  ls -la
   57  ls
   58  ls -la
   59  rm index.html
   60  rm -rf index.html
   61  sudo rsync -avP /tmp/wordpress/ /var/www/html/
   62  cd ..
   63  sudo rsync -avP /tmp/wordpress/ /var/www/html/
   64  sudo chown -R www-data:www-data /var/www/html/
   65  sudo rsync -avP /tmp/wordpress/ /var/www/html/
   66  ls
   67  cd home
   68  ls
   69  cd ubuntu
   70  sudo rsync -avP /tmp/wordpress/ /var/www/html/
   71  sudo chown -R www-data:www-data /var/www/html/
   72  sudo chmod -R 755 /var/www/html/
   73  sudo rm index.html
   74  sudo rm -rf index.html
   75  sudo systemctl restart nginx
   76  cd /etc/nginx/sites-enabled/
   77  sudo nano wordpress
   78  clear


This is 10.209.99.16


  GNU nano 6.2                                             wordpress
server {
        listen 80 default_server;
        listen [::]:80 default_server;
        root /var/www/html;
        index index.php index.html index.htm index.nginx-debian.html;
        access_log /var/log/nginx/wordpress_access.log;
        error_log /var/log/nginx/wordpress_error.log;
        location / {
                proxy_pass http://10.209.99.16:80;
                try_files $uri $uri/ /index.php?$args;
        }

        location ~ \.php$ {
                include snippets/fastcgi-php.conf;
                fastcgi_pass unix:/var/run/php/php7.4-fpm.sock;
                fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
                include fastcgi_params;
        }

        location /wp-admin {
                try_files $uri $uri/ /wp-admin/index.php?$args;
        }

        location /wp-content {
                try_files $uri =404;
        }

}


this local pc server 
##
# You should look at the following URL's in order to grasp a solid understanding
# of Nginx configuration files in order to fully unleash the power of Nginx.
# https://www.nginx.com/resources/wiki/start/
# https://www.nginx.com/resources/wiki/start/topics/tutorials/config_pitfalls/
# https://wiki.debian.org/Nginx/DirectoryStructure
#
# In most cases, administrators will remove this file from sites-enabled/ and
# leave it as reference inside of sites-available where it will continue to be
# updated by the nginx packaging team.
#
# This file will automatically load configuration files provided by other
# applications, such as Drupal or Wordpress. These applications will be made
# available underneath a path with that package name, such as /drupal8.
#
# Please see /usr/share/doc/nginx-doc/examples/ for more detailed examples.
##

# Default server configuration
#
server {
	listen 80 default_server;
	listen [::]:80 default_server;

	# SSL configuration
	#
	# listen 443 ssl default_server;
	# listen [::]:443 ssl default_server;
	#
	# Note: You should disable gzip for SSL traffic.
	# See: https://bugs.debian.org/773332
	#
	# Read up on ssl_ciphers to ensure a secure configuration.
	# See: https://bugs.debian.org/765782
	#
	# Self signed certs generated by the ssl-cert package
	# Don't use them in a production server!
	#
	# include snippets/snakeoil.conf;

	root /var/www/html;

	# Add index.php to the list if you are using PHP
	index index.php index.html index.htm index.nginx-debian.html;

	#server_name _;

	location / {
		# First attempt to serve request as file, then
		# as directory, then fall back to displaying a 404.
		try_files $uri $uri/ /index.php?$args;
	}

	# pass PHP scripts to FastCGI server
	#
	location ~ \.php$ {
	#	include snippets/fastcgi-php.conf;
	#
	#	# With php-fpm (or other unix sockets):
		fastcgi_pass unix:/run/php/php7.4-fpm.sock;
	#	# With php-cgi (or other tcp sockets):
	#	fastcgi_pass 127.0.0.1:9000;
	}

	# deny access to .htaccess files, if Apache's document root
	# concurs with nginx's one
	#
	#location ~ /\.ht {
	#	deny all;
	#}
}


# Virtual Host configuration for example.com
#
# You can move that to a different file under sites-available/ and symlink that
# to sites-enabled/ to enable it.
#
#server {
#	listen 80;
#	listen [::]:80;
#
#	server_name example.com;
#
#	root /var/www/example.com;
#	index index.html;
#
#	location / {
#		try_files $uri $uri/ =404;
#	}
#}






